{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\fatha\\\\Desktop\\\\projet\\\\FindSport2Play\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport isEmpty from '../validation/is-empty';\nimport { SET_CURRENT_USER, GET_NOTIFICATION, SET_AUTH_LOADING, REMOVE_AUTH_LOADING } from '../actions/types';\nvar initialState = {\n  isAuthenticated: false,\n  loading: false,\n  user: {},\n  notifications: {\n    unread: 0,\n    notification: []\n  }\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return _objectSpread({}, state, {\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      });\n\n    case GET_NOTIFICATION:\n      return _objectSpread({}, state, {\n        notifications: action.payload\n      });\n\n    case SET_AUTH_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case REMOVE_AUTH_LOADING:\n      return _objectSpread({}, state, {\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/fatha/Desktop/projet/FindSport2Play/client/src/reducers/authReducer.js"],"names":["isEmpty","SET_CURRENT_USER","GET_NOTIFICATION","SET_AUTH_LOADING","REMOVE_AUTH_LOADING","initialState","isAuthenticated","loading","user","notifications","unread","notification","state","action","type","payload"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,wBAApB;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,gBAA7C,EAA+DC,mBAA/D,QAA0F,kBAA1F;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAE,KADA;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,IAAI,EAAE,EAHW;AAIjBC,EAAAA,aAAa,EAAE;AACXC,IAAAA,MAAM,EAAE,CADG;AAEXC,IAAAA,YAAY,EAAE;AAFH;AAJE,CAArB;AAUA,eAAe,YAAsC;AAAA,MAA7BC,KAA6B,uEAArBP,YAAqB;AAAA,MAAPQ,MAAO;;AACjD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,gBAAL;AACI,+BACOW,KADP;AAEIN,QAAAA,eAAe,EAAE,CAACN,OAAO,CAACa,MAAM,CAACE,OAAR,CAF7B;AAGIP,QAAAA,IAAI,EAAEK,MAAM,CAACE;AAHjB;;AAKJ,SAAKb,gBAAL;AACI,+BACOU,KADP;AAEIH,QAAAA,aAAa,EAAEI,MAAM,CAACE;AAF1B;;AAIJ,SAAKZ,gBAAL;AACI,+BACOS,KADP;AAEIL,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKH,mBAAL;AACI,+BACOQ,KADP;AAEIL,QAAAA,OAAO,EAAE;AAFb;;AAIJ;AACI,aAAOK,KAAP;AAvBR;AAyBH","sourcesContent":["import isEmpty from '../validation/is-empty';\r\nimport { SET_CURRENT_USER, GET_NOTIFICATION, SET_AUTH_LOADING, REMOVE_AUTH_LOADING } from '../actions/types';\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    loading: false,\r\n    user: {},\r\n    notifications: {\r\n        unread: 0,\r\n        notification: []\r\n    }\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_CURRENT_USER:\r\n            return{\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n        case GET_NOTIFICATION:\r\n            return{\r\n                ...state,\r\n                notifications: action.payload\r\n            };\r\n        case SET_AUTH_LOADING:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case REMOVE_AUTH_LOADING:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}