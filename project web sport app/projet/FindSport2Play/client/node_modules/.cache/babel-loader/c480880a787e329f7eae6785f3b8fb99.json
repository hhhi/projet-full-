{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\fatha\\\\Desktop\\\\projet\\\\FindSport2Play\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\fatha\\\\Desktop\\\\projet\\\\FindSport2Play\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\fatha\\\\Desktop\\\\projet\\\\FindSport2Play\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\fatha\\\\Desktop\\\\projet\\\\FindSport2Play\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\fatha\\\\Desktop\\\\projet\\\\FindSport2Play\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\fatha\\\\Desktop\\\\projet\\\\FindSport2Play\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\fatha\\\\Desktop\\\\projet\\\\FindSport2Play\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\fatha\\\\Desktop\\\\projet\\\\FindSport2Play\\\\client\\\\src\\\\components\\\\event\\\\comments\\\\CommentForm.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Paper, AppBar, Typography, Button } from '@material-ui/core';\nimport TextAreaFieldGroup from '../../common/TextAreaFieldGroup';\nimport { addComment } from '../../../actions/eventActions';\nimport styles from './CommentForm.module.css';\n\nvar CommentForm = /*#__PURE__*/function (_Component) {\n  _inherits(CommentForm, _Component);\n\n  function CommentForm(props) {\n    var _this;\n\n    _classCallCheck(this, CommentForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentForm).call(this, props));\n    _this.state = {\n      text: '',\n      errors: {}\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CommentForm, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      if (newProps.errors) {\n        this.setState({\n          errors: newProps.errors\n        });\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var user = this.props.auth.user;\n      var commentData = {\n        text: this.state.text,\n        name: user.name\n      };\n      this.props.addComment(this.props.match.params.id, commentData);\n      this.setState({\n        text: ''\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      return /*#__PURE__*/React.createElement(Paper, {\n        className: \"marginX-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(AppBar, {\n        className: \"primary-color pad-1\",\n        position: \"static\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, \"Make a comment...\")), /*#__PURE__*/React.createElement(\"form\", {\n        className: styles.container,\n        onSubmit: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextAreaFieldGroup, {\n        label: \"Comment\",\n        placeholder: \"Your comments\",\n        name: \"text\",\n        value: this.state.text,\n        onChange: this.onChange,\n        error: errors.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        className: \"primary-color\",\n        type: \"submit\",\n        variant: \"contained\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, \"Submit\")));\n    }\n  }]);\n\n  return CommentForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addComment: addComment\n})(withRouter(CommentForm));","map":{"version":3,"sources":["C:/Users/fatha/Desktop/projet/FindSport2Play/client/src/components/event/comments/CommentForm.js"],"names":["React","Component","withRouter","connect","Paper","AppBar","Typography","Button","TextAreaFieldGroup","addComment","styles","CommentForm","props","state","text","errors","onChange","bind","onSubmit","newProps","setState","e","preventDefault","user","auth","commentData","name","match","params","id","target","value","container","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Paper, AppBar, Typography, Button } from '@material-ui/core';\r\n\r\nimport TextAreaFieldGroup from '../../common/TextAreaFieldGroup';\r\nimport { addComment } from '../../../actions/eventActions';\r\nimport styles from './CommentForm.module.css';\r\n\r\nclass CommentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: '',\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  \r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.errors) {\r\n      this.setState({ errors: newProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    \r\n    const { user } = this.props.auth;\r\n\r\n    const commentData = {\r\n      text : this.state.text,\r\n      name: user.name,\r\n    };\r\n    \r\n    this.props.addComment(this.props.match.params.id, commentData);\r\n    this.setState({ text: '' });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n        <Paper className=\"marginX-5\">\r\n            <AppBar className=\"primary-color pad-1\" position=\"static\">\r\n                <Typography variant=\"h5\">Make a comment...</Typography>\r\n            </AppBar>\r\n            <form className={styles.container} onSubmit={this.onSubmit}>\r\n              <TextAreaFieldGroup\r\n                label=\"Comment\"\r\n                placeholder=\"Your comments\"\r\n                name=\"text\"\r\n                value={this.state.text}\r\n                onChange={this.onChange}\r\n                error={errors.text}\r\n              />\r\n              <Button className=\"primary-color\" type=\"submit\" variant=\"contained\">Submit</Button>\r\n            </form>\r\n        </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, {addComment})(withRouter(CommentForm)); "]},"metadata":{},"sourceType":"module"}