{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\fatha\\\\Desktop\\\\projet\\\\FindSport2Play\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\fatha\\\\Desktop\\\\projet\\\\FindSport2Play\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\fatha\\\\Desktop\\\\projet\\\\FindSport2Play\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\fatha\\\\Desktop\\\\projet\\\\FindSport2Play\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\fatha\\\\Desktop\\\\projet\\\\FindSport2Play\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\fatha\\\\Desktop\\\\projet\\\\FindSport2Play\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\fatha\\\\Desktop\\\\projet\\\\FindSport2Play\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\fatha\\\\Desktop\\\\projet\\\\FindSport2Play\\\\client\\\\src\\\\components\\\\events\\\\Events.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Typography } from '@material-ui/core';\nimport EventsList from './EventsList';\nimport SelectFieldGroup from '../common/SelectFieldGroup';\nimport Spinner from '../common/Spinner';\nimport { getAllEvents, getEvents } from '../../actions/eventActions';\nvar sportList = [\"All Sports\", \"Badminton\", \"Tennis\", \"Volleyball\", \"Basketball\", \"Baseball\", \"Running\", \"Table tennis\", \"Football\", \"Soccer\"];\n\nvar Events = /*#__PURE__*/function (_Component) {\n  _inherits(Events, _Component);\n\n  function Events(props) {\n    var _this;\n\n    _classCallCheck(this, Events);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Events).call(this, props));\n    _this.state = {\n      typeofsport: ''\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Events, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.scrollTo(0, 0);\n\n      if (this.props.match.params.type) {\n        this.props.getAllEvents();\n      } else {\n        this.props.getEvents('');\n      }\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n      this.props.getEvents(e.target.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$events = this.props.events,\n          events = _this$props$events.events,\n          loading = _this$props$events.loading;\n      var eventContent;\n\n      if (!events.length) {\n        eventContent = /*#__PURE__*/React.createElement(Typography, {\n          className: \"marginT-5\",\n          variant: \"h3\",\n          color: \"secondary\",\n          component: \"p\",\n          align: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }\n        }, \"No Events Yet\");\n      } else {\n        eventContent = /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          spacing: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(EventsList, {\n          events: events,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"minHeight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: \"marginX-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        className: \"primary-textColor marginT-2\",\n        variant: \"h3\",\n        component: \"h1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, \"List of Events\")), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(SelectFieldGroup, {\n        label: \"Search Sport by Type\",\n        name: \"typeofsport\",\n        type: \"name\",\n        value: this.state.typeofsport,\n        onChange: this.onChange,\n        sportList: sportList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }))), loading ? /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }\n      }) : eventContent);\n    }\n  }]);\n\n  return Events;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    events: state.events\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAllEvents: getAllEvents,\n  getEvents: getEvents\n})(Events);","map":{"version":3,"sources":["C:/Users/fatha/Desktop/projet/FindSport2Play/client/src/components/events/Events.js"],"names":["React","Component","connect","Grid","Typography","EventsList","SelectFieldGroup","Spinner","getAllEvents","getEvents","sportList","Events","props","state","typeofsport","onChange","bind","window","scrollTo","match","params","type","e","setState","target","name","value","events","loading","eventContent","length","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\nimport EventsList from './EventsList';\r\nimport SelectFieldGroup from '../common/SelectFieldGroup';\r\nimport Spinner from '../common/Spinner';\r\nimport { getAllEvents, getEvents } from '../../actions/eventActions';\r\n\r\nconst sportList = [\"All Sports\", \"Badminton\", \"Tennis\", \"Volleyball\", \"Basketball\", \"Baseball\", \"Running\", \"Table tennis\", \"Football\", \"Soccer\"];\r\n\r\nclass Events extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            typeofsport: ''\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        window.scrollTo(0, 0);\r\n        if(this.props.match.params.type){\r\n            this.props.getAllEvents();\r\n        }\r\n        else{\r\n            this.props.getEvents('');\r\n        }\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]: e.target.value});\r\n        this.props.getEvents(e.target.value);\r\n    }\r\n    \r\n    render(){\r\n        const {events, loading} = this.props.events;\r\n        let eventContent;\r\n        \r\n        if(!events.length){\r\n            eventContent = (\r\n                <Typography className=\"marginT-5\" variant=\"h3\" color=\"secondary\" component=\"p\" align=\"center\">\r\n                    No Events Yet\r\n                </Typography>\r\n            );\r\n        }\r\n        else{\r\n            eventContent = (\r\n                <Grid container spacing={2}>\r\n                    <EventsList events={events} />\r\n                </Grid>\r\n            );\r\n        }\r\n        \r\n        return(\r\n            <div className=\"minHeight\">\r\n                <Grid container className=\"marginX-1\">\r\n                    <Grid item xs={12} sm={6} md={6}>\r\n                        <Typography className=\"primary-textColor marginT-2\" variant=\"h3\" component=\"h1\">\r\n                            List of Events\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={6}>\r\n                    <SelectFieldGroup\r\n                        label=\"Search Sport by Type\"\r\n                        name=\"typeofsport\"\r\n                        type=\"name\"\r\n                        value={this.state.typeofsport}\r\n                        onChange={this.onChange}\r\n                        sportList={sportList}\r\n                    />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                { loading ? <Spinner /> : eventContent }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    events: state.events\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAllEvents, getEvents })(Events);"]},"metadata":{},"sourceType":"module"}