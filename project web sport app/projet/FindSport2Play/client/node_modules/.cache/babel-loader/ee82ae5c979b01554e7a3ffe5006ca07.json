{"ast":null,"code":"import axios from '../axios-lists';\nimport { GET_EVENTS, GET_EVENT, EVENT_LOADING, GET_ERRORS, CLEAR_ERRORS, DELETE_EVENT, GET_NOTIFICATION, CHANGE_SNACKBAR_MESSAGE } from './types';\nexport var getAllEvents = function getAllEvents() {\n  return function (dispatch) {\n    dispatch(setEventLoading());\n    dispatch(getNotification());\n    axios.get('/api/events/all').then(function (res) {\n      dispatch({\n        type: GET_EVENTS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_EVENTS,\n        payload: {}\n      });\n    });\n  };\n};\nexport var getEvents = function getEvents(sport) {\n  return function (dispatch) {\n    dispatch(setEventLoading());\n    dispatch(getNotification());\n    var url = '/api/events/events';\n    if (sport && sport !== 'All Sports') url = \"/api/events/events?sport=\".concat(sport);\n    axios.get(url).then(function (res) {\n      dispatch({\n        type: GET_EVENTS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_EVENTS,\n        payload: {}\n      });\n    });\n  };\n};\nexport var getEvent = function getEvent(id) {\n  return function (dispatch) {\n    dispatch(setEventLoading());\n    dispatch(getNotification());\n    axios.get(\"/api/events/\".concat(id)).then(function (res) {\n      return dispatch({\n        type: GET_EVENT,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_EVENT,\n        payload: null\n      });\n    });\n  };\n};\nexport var createEvent = function createEvent(eventData, history) {\n  return function (dispatch) {\n    axios.post('/api/events', eventData).then(function (res) {\n      return history.push('/events');\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var addComment = function addComment(eventID, commentData, history) {\n  return function (dispatch) {\n    dispatch(clearErrors());\n    axios.post(\"/api/events/\".concat(eventID, \"/comments\"), commentData).then(function (res) {\n      return dispatch({\n        type: GET_EVENT,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var deleteEvent = function deleteEvent(id) {\n  return function (dispatch) {\n    axios.delete(\"/api/events/\".concat(id)).then(function (res) {\n      return dispatch({\n        type: DELETE_EVENT,\n        payload: id\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var deleteComment = function deleteComment(eventID, com_id) {\n  return function (dispatch) {\n    axios.delete(\"/api/events/\".concat(eventID, \"/comments/\").concat(com_id)).then(function (res) {\n      return dispatch({\n        type: GET_EVENT,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var joinEvent = function joinEvent(eventID) {\n  return function (dispatch) {\n    axios.put(\"/api/events/\".concat(eventID, \"/join\")).then(function (res) {\n      dispatch({\n        type: CHANGE_SNACKBAR_MESSAGE,\n        payload: res.data.join\n      });\n      dispatch({\n        type: GET_EVENT,\n        payload: res.data.event\n      });\n    }).catch(function (err) {\n      if (err.response) {\n        dispatch({\n          type: CHANGE_SNACKBAR_MESSAGE,\n          payload: err.response.data.error\n        });\n      }\n    });\n  };\n};\nexport var flagEvent = function flagEvent(eventID) {\n  return function (dispatch) {\n    axios.put(\"/api/events/\".concat(eventID, \"/flag\")).then(function (res) {\n      dispatch({\n        type: GET_EVENT,\n        payload: res.data.event\n      });\n    });\n  };\n};\nexport var setEventLoading = function setEventLoading() {\n  return {\n    type: EVENT_LOADING\n  };\n}; // Clear errors\n\nexport var clearErrors = function clearErrors() {\n  return {\n    type: CLEAR_ERRORS\n  };\n};\nexport var getNotification = function getNotification() {\n  return function (dispatch) {\n    axios.get(\"/api/notification\").then(function (res) {\n      return dispatch({\n        type: GET_NOTIFICATION,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/fatha/Desktop/projet/FindSport2Play/client/src/actions/eventActions.js"],"names":["axios","GET_EVENTS","GET_EVENT","EVENT_LOADING","GET_ERRORS","CLEAR_ERRORS","DELETE_EVENT","GET_NOTIFICATION","CHANGE_SNACKBAR_MESSAGE","getAllEvents","dispatch","setEventLoading","getNotification","get","then","res","type","payload","data","catch","err","getEvents","sport","url","getEvent","id","createEvent","eventData","history","post","push","response","addComment","eventID","commentData","clearErrors","deleteEvent","delete","deleteComment","com_id","joinEvent","put","join","event","error","flagEvent","console","log"],"mappings":"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","sourcesContent":["import axios from '../axios-lists';\r\n\r\nimport { GET_EVENTS, GET_EVENT, EVENT_LOADING, GET_ERRORS, CLEAR_ERRORS, DELETE_EVENT, GET_NOTIFICATION, CHANGE_SNACKBAR_MESSAGE  } from './types';\r\n\r\nexport const getAllEvents = () => dispatch => {\r\n    dispatch(setEventLoading());\r\n    dispatch(getNotification());\r\n\r\n    axios.get('/api/events/all')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EVENTS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch(err => \r\n            dispatch({\r\n                type: GET_EVENTS,\r\n                payload: {}\r\n            })\r\n        );\r\n};\r\n\r\nexport const getEvents = sport => dispatch => {\r\n    dispatch(setEventLoading());\r\n    dispatch(getNotification());\r\n\r\n    let url = '/api/events/events';\r\n    if(sport && sport !== 'All Sports') url = `/api/events/events?sport=${sport}`;\r\n\r\n    axios.get(url)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EVENTS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch(err => \r\n            dispatch({\r\n                type: GET_EVENTS,\r\n                payload: {}\r\n            })\r\n        );\r\n};\r\n\r\nexport const getEvent = (id) => dispatch => {\r\n    dispatch(setEventLoading());\r\n    dispatch(getNotification());\r\n    axios\r\n        .get(`/api/events/${id}`)\r\n        .then(res => \r\n            dispatch({\r\n                type: GET_EVENT,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .catch(err => \r\n            dispatch({\r\n                type: GET_EVENT,\r\n                payload: null\r\n            })\r\n        );\r\n};\r\n\r\nexport const createEvent = (eventData, history) => dispatch => {\r\n    axios\r\n        .post('/api/events', eventData)\r\n        .then(res => history.push('/events'))\r\n        .catch(err => \r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\nexport const addComment = (eventID, commentData, history) => dispatch => {\r\n    dispatch(clearErrors());\r\n    axios\r\n        .post(`/api/events/${eventID}/comments`, commentData)\r\n        .then(res => \r\n            dispatch({\r\n                type: GET_EVENT,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .catch(err => \r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\nexport const deleteEvent = id => dispatch => {\r\n    axios\r\n        .delete(`/api/events/${id}`)\r\n        .then(res => \r\n            dispatch({\r\n                type: DELETE_EVENT,\r\n                payload: id\r\n            })\r\n        )\r\n        .catch(err => \r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\nexport const deleteComment = (eventID, com_id) => dispatch => {\r\n     axios\r\n         .delete(`/api/events/${eventID}/comments/${com_id}`)\r\n         .then(res => \r\n             dispatch({\r\n                type: GET_EVENT,\r\n                payload: res.data\r\n             })\r\n         )\r\n         .catch(err => \r\n             dispatch({\r\n                 type: GET_ERRORS,\r\n                 payload: err.response.data\r\n             })\r\n         );\r\n};\r\n \r\nexport const joinEvent = (eventID) => dispatch => {\r\n    axios\r\n        .put(`/api/events/${eventID}/join`)\r\n        .then(res =>{\r\n            dispatch({\r\n                type: CHANGE_SNACKBAR_MESSAGE,\r\n                payload: res.data.join\r\n            });\r\n            dispatch({\r\n                type: GET_EVENT,\r\n                payload: res.data.event\r\n            });\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch({\r\n                    type: CHANGE_SNACKBAR_MESSAGE,\r\n                    payload: err.response.data.error\r\n                })\r\n            }\r\n        });\r\n};\r\n\r\nexport const flagEvent = (eventID) => dispatch => {\r\n    axios\r\n        .put(`/api/events/${eventID}/flag`)\r\n        .then(res =>{\r\n            dispatch({\r\n                type: GET_EVENT,\r\n                payload: res.data.event\r\n            });\r\n        })\r\n};\r\n\r\nexport const setEventLoading = () => {\r\n    return{\r\n        type: EVENT_LOADING\r\n    };\r\n};\r\n\r\n// Clear errors\r\nexport const clearErrors = () => {\r\n    return{\r\n        type: CLEAR_ERRORS\r\n    };\r\n};\r\n\r\nexport const getNotification = () => dispatch => {\r\n  axios\r\n    .get(`/api/notification`)\r\n    .then(res => \r\n        dispatch({\r\n            type: GET_NOTIFICATION,\r\n            payload: res.data\r\n        })\r\n    )\r\n    .catch(err =>\r\n        console.log(err)\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}