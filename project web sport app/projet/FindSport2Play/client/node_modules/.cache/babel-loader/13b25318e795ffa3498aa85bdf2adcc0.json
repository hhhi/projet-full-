{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\fatha\\\\Desktop\\\\projet\\\\FindSport2Play\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\fatha\\\\Desktop\\\\projet\\\\FindSport2Play\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\fatha\\\\Desktop\\\\projet\\\\FindSport2Play\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\fatha\\\\Desktop\\\\projet\\\\FindSport2Play\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\fatha\\\\Desktop\\\\projet\\\\FindSport2Play\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\fatha\\\\Desktop\\\\projet\\\\FindSport2Play\\\\client\\\\src\\\\components\\\\event\\\\Event.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Paper, List } from '@material-ui/core';\nimport Spinner from '../common/Spinner';\nimport EventItem from '../event/EventItem';\nimport Comments from './comments/Comments';\nimport CommentForm from './comments/CommentForm';\nimport { getEvent } from '../../actions/eventActions';\n\nvar Event = /*#__PURE__*/function (_Component) {\n  _inherits(Event, _Component);\n\n  function Event() {\n    _classCallCheck(this, Event);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Event).apply(this, arguments));\n  }\n\n  _createClass(Event, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getEvent(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$events = this.props.events,\n          event = _this$props$events.event,\n          snackbarMessage = _this$props$events.snackbarMessage,\n          loading = _this$props$events.loading;\n      var isAuthenticated = this.props.auth.isAuthenticated;\n      var eventContent;\n\n      if (event === null || loading || Object.keys(event).length === 0) {\n        eventContent = /*#__PURE__*/React.createElement(Spinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 28\n          }\n        });\n      } else {\n        eventContent = /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Paper, {\n          elevation: 3,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(EventItem, {\n          event: event,\n          snackbarMessage: snackbarMessage,\n          auth: isAuthenticated,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }\n        })), isAuthenticated ? /*#__PURE__*/React.createElement(CommentForm, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 40\n          }\n        }) : /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 58\n          }\n        }, \"You need to login to add comment. \", /*#__PURE__*/React.createElement(Link, {\n          to: \"/login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 96\n          }\n        }, \"Click Here\")), event.comments.length > 0 ? /*#__PURE__*/React.createElement(Comments, {\n          eventId: event._id,\n          comments: event.comments,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 50\n          }\n        }) : /*#__PURE__*/React.createElement(\"h2\", {\n          className: \"mb-5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 111\n          }\n        }, \"No Comment Yet\"));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"primary-textColor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, event.nameofevent), /*#__PURE__*/React.createElement(List, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, eventContent)));\n    }\n  }]);\n\n  return Event;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    events: state.events\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getEvent: getEvent\n})(Event);","map":{"version":3,"sources":["C:/Users/fatha/Desktop/projet/FindSport2Play/client/src/components/event/Event.js"],"names":["React","Component","connect","Link","Paper","List","Spinner","EventItem","Comments","CommentForm","getEvent","Event","props","match","params","id","events","event","snackbarMessage","loading","isAuthenticated","auth","eventContent","Object","keys","length","comments","_id","nameofevent","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Paper, List } from '@material-ui/core';\r\n\r\nimport Spinner from '../common/Spinner';\r\nimport EventItem from '../event/EventItem';\r\nimport Comments from './comments/Comments';\r\nimport CommentForm from './comments/CommentForm';\r\nimport { getEvent } from '../../actions/eventActions';\r\n\r\nclass Event extends Component{\r\n    componentDidMount(){\r\n        this.props.getEvent(this.props.match.params.id);\r\n    }\r\n    \r\n    render(){\r\n        const { event, snackbarMessage, loading } = this.props.events;\r\n        const { isAuthenticated } = this.props.auth;\r\n        let eventContent;\r\n        \r\n        if(event === null || loading  || Object.keys(event).length === 0){\r\n            eventContent = <Spinner />;\r\n        }\r\n        else{\r\n            eventContent = (\r\n                <div>\r\n                    <Paper elevation={3}>\r\n                        <EventItem event={event} snackbarMessage={snackbarMessage} auth={isAuthenticated}/>\r\n                    </Paper>\r\n                    {isAuthenticated ? <CommentForm /> : <h2>You need to login to add comment. <Link to=\"/login\">Click Here</Link></h2>}\r\n                    {event.comments.length > 0 ? <Comments eventId={event._id} comments={event.comments} /> : <h2 className=\"mb-5\">No Comment Yet</h2>}\r\n                </div>\r\n            );\r\n        }\r\n        \r\n        return(\r\n            <div className=\"post\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"primary-textColor\">{event.nameofevent}</h1>\r\n                    <List>\r\n                    {eventContent}\r\n                    </List>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    events: state.events\r\n});\r\n\r\nexport default connect(mapStateToProps, {getEvent})(Event);"]},"metadata":{},"sourceType":"module"}